/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package nava.alignment;

import java.awt.BorderLayout;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.util.ArrayList;
import nava.data.io.IO;
import nava.data.types.AlignmentData;

/**
 *
 * @author Michael Golden <michaelgolden0@gmail.com>
 */
public class AlignmentEditor extends javax.swing.JPanel implements AlignmentPanelListener {

    /**
     * Creates new form AlignmentEditor
     */
    public AlignmentEditor() {
        initComponents();

        AlignmentData al = new AlignmentData();
        IO.loadFastaSequences(new File("examples/alignments/hiv500.fas"), al.sequences, al.sequenceNames);
        
        AlignmentModel sequenceModel = new AlignmentModel();
        //sequenceModel.setAlignment(al);
        ArrayList<AlignmentItem> items = new ArrayList<>();
        for(int i = 0 ; i < al.sequenceNames.size() ; i++)
        {
            ArrayList<String> subItems = new ArrayList<>();
            ArrayList<String> subItemNames = new ArrayList<>();
            subItems.add(al.sequences.get(i));
            if(i % 1 == 0)
            {
                subItems.add("(((....)..)).................((...((..)))...)");
            }
            items.add(new AlignmentItem(al.sequenceNames.get(i),subItems,subItemNames, i));
        }
        Alignment alignment = new Alignment(items);
        sequenceModel.setAlignment(alignment);
        
        AlignmentNamePanel sequenceNamePanel = new AlignmentNamePanel(sequenceModel);
        AlignmentPanel alignmentPanel = new AlignmentPanel(sequenceModel, sequenceNamePanel);
        alignmentPanel.addAlignmentPanelListener(this);
        
        leftPanel.add(sequenceNamePanel, BorderLayout.CENTER);
        rightScrollPane.setViewportView(alignmentPanel);
        
        sequenceModel.sort(AlignmentModel.ASCENDING);
        alignmentPanel.repaint();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        leftPanel = new javax.swing.JPanel();
        rightPanel = new javax.swing.JPanel();
        rightScrollPane = new javax.swing.JScrollPane();

        setLayout(new java.awt.BorderLayout());

        jSplitPane1.setDividerLocation(80);

        leftPanel.setLayout(new java.awt.BorderLayout());
        jSplitPane1.setLeftComponent(leftPanel);

        rightPanel.setLayout(new java.awt.BorderLayout());

        rightScrollPane.setBorder(null);
        rightPanel.add(rightScrollPane, java.awt.BorderLayout.CENTER);

        jSplitPane1.setRightComponent(rightPanel);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JScrollPane rightScrollPane;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseDraggedOffVisibleRegion(int x, int y) {
        rightScrollPane.getHorizontalScrollBar().setValue(rightScrollPane.getHorizontalScrollBar().getValue()+x);
        rightScrollPane.getVerticalScrollBar().setValue(rightScrollPane.getVerticalScrollBar().getValue()+y);
    }
}