/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package nava.tasks.applications;

import javax.swing.Icon;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Michael Golden <michaelgolden0@gmail.com>
 */
public class MusclePanel extends javax.swing.JPanel implements ApplicationPanelInterface {

    SpinnerNumberModel gapOpenModel = new SpinnerNumberModel(1, 0, 1000, 0.5);
    SpinnerNumberModel iterationsModel = new SpinnerNumberModel(16, 1, 1000, 1);

    /**
     * Creates new form MusclePanel
     */
    public MusclePanel() {
        initComponents();
        
        this.gapOpenPenaltySpinner.setModel(gapOpenModel);
        this.maxIterationsSpinner.setModel(iterationsModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        maxIterationsSpinner = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        gapOpenPenaltySpinner = new javax.swing.JSpinner();

        jLabel1.setText("Max. iterations");

        jLabel2.setText("Gap open penalty");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maxIterationsSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(gapOpenPenaltySpinner)))
                    .addComponent(jLabel1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(gapOpenPenaltySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxIterationsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner gapOpenPenaltySpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSpinner maxIterationsSpinner;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setupApplication(Application application) {
        if(application instanceof MuscleApplication)
        {
            MuscleApplication muscle = (MuscleApplication)application;
            String parameters = "-gapopen "+this.gapOpenModel.getValue()+" -maxiters "+this.iterationsModel.getValue();
            muscle.extraParameters = parameters;
        }
    }

    @Override
    public String getTitle() {
        return "Muscle settings";
    }

    @Override
    public Icon getIcon() {
        return null;
    }
}
