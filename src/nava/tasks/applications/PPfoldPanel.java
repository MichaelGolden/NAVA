/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package nava.tasks.applications;

import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import nava.data.types.Alignment;
import nava.data.types.Tree;
import nava.ui.ProjectController;
import nava.ui.ProjectModel;

/**
 *
 * @author Michael Golden <michaelgolden0@gmail.com>
 */
public class PPfoldPanel extends javax.swing.JPanel implements ApplicationPanelInterface {

    Application application;
    Alignment alignment;
    Tree associatedTree = null;
    DefaultComboBoxModel<Tree> associatedTrees = new DefaultComboBoxModel<>();

    /**
     * Creates new form PPfoldPanel
     */
    public PPfoldPanel(Application application, Alignment alignment) {
        initComponents();
        this.application = application;
        this.alignment = alignment;
        update();
    }
    String arguments = "";

    public void update() {
        associatedTrees.removeAllElements();
        System.out.println("APE1" + application);
        if (application != null) {
            System.out.println("APE2" + application.projectController);
            // System.out.println("APE3" + application.projectController.projectModel);
        }
        if (application != null && application.projectController != null && application.projectController.projectModel != null) {
            System.out.println("WWW0?");
            for (int i = 0; i < application.projectController.projectModel.dataSources.size(); i++) {
                System.out.println("WWW1?" + application.projectController.projectModel.dataSources.get(i));
                if (application.projectController.projectModel.dataSources.get(i) instanceof Tree) {
                    Tree tree = (Tree) application.projectController.projectModel.dataSources.get(i);
                    System.out.println("WWW2?" + tree);
                    System.out.println("WWW3?" + tree.parentSource + "\t" + alignment);
                    if (tree.parentSource.equals(alignment)) {
                        associatedTrees.addElement(tree);
                    }
                }
            }
        }

        this.jComboBox1.setModel(associatedTrees);

        if (associatedTrees.getSize() > 0) {
            this.jRadioButton2.setEnabled(true);
            this.jComboBox1.setEnabled(true);
        } else {
            this.jRadioButton2.setEnabled(false);
            this.jComboBox1.setEnabled(false);
        }
    }

    public void setAlignment(Alignment alignment) {
        this.alignment = alignment;
        update();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Automatically calculate a maximum likelihood tree from the alignment");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Select a phylogenetic tree that is associated with this alignment");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Tree");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void updateArguments() {
        arguments = "";
        if (this.jRadioButton2.isSelected()) {
            Object object = this.jComboBox1.getSelectedItem();
            if (object != null && object instanceof Tree) {
                Tree tree = (Tree) object;
                arguments = "-t \"" + tree.getImportedDataSourcePath(ProjectModel.path)+"\"";
            }
        }
    }

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        updateArguments();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        updateArguments();
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        updateArguments();
    }//GEN-LAST:event_jRadioButton2ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    // End of variables declaration//GEN-END:variables

    public String getArgumentString() {
        return arguments;
    }

    @Override
    public void setupApplication(Application application) {
        if (application instanceof PPfoldApplication) {
            PPfoldApplication app = (PPfoldApplication) application;
            app.arguments = arguments;
        }
    }

    @Override
    public String getTitle() {
        return "PPfold settings";
    }

    @Override
    public Icon getIcon() {
        return null;
    }
}
