/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AboutDialog.java
 *
 * Created on 16 Jan 2012, 9:08:15 AM
 */

package nava.ui;

import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author Michael Golden
 */
public class AboutDialog extends javax.swing.JDialog {

    /** Creates new form AboutDialog */
    
    
    public AboutDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        
        
        
        initComponents();
        
        try {
            //Calendar  cal = new Calendar(new File(getClass().getClassLoader().getResource(getClass().getCanonicalName().replace('.', '/') + ".class").toURI()).lastModified())
            File file = null;
            try
            {
                file = new File(getClass().getClassLoader().getResource(getClass().getCanonicalName().replace('.', '/') + ".class").toURI());
                throw new IllegalArgumentException("");
            }
            catch(IllegalArgumentException ex)
            {
               
                String s = getClass().getClassLoader().getResource(getClass().getCanonicalName().replace('.', '/') + ".class").toString().replaceAll("!.*", "").replaceAll(".*file:/", "");
              
                file = new File(s);
            }
            
            Date date = new Date(file.lastModified());
            Calendar cal = Calendar.getInstance();
            cal.setTime(date);
            
            BufferedImage img = ImageIO.read(getClass().getResource("/resources/icons/about.png"));
            Graphics2D g = (Graphics2D) img.getGraphics();            
            g.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
            g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            g.setFont(g.getFont().deriveFont(Font.PLAIN, 13.5f));
            g.setColor(Color.black);
            String text = "Michael Golden, Darren Martin";
            g.drawString(text, img.getWidth()-g.getFontMetrics().stringWidth(text)-5, img.getHeight()-25);
            String day = cal.getDisplayName(Calendar.MONTH, Calendar.SHORT, Locale.getDefault());
            System.out.println(date);
            text = cal.get(Calendar.DAY_OF_MONTH) + " " + day + " " + cal.get(Calendar.YEAR)  +" [version 1."+(cal.get(Calendar.YEAR)%10)+"."+""+cal.get(Calendar.DAY_OF_YEAR)+"]";
            g.drawString(text, img.getWidth()-g.getFontMetrics().stringWidth(text)-5, img.getHeight()-7);
            
            ImageIcon icon = new ImageIcon(img);
            closeButton.setIcon(icon);
            Dimension d = new Dimension(icon.getIconWidth(), icon.getIconHeight());
            closeButton.setPreferredSize(d);
            setSize(d);
        } catch (IOException ex) {
            Logger.getLogger(AboutDialog.class.getName()).log(Level.SEVERE, null, ex);
        }  
        catch(URISyntaxException ex)
        {
            Logger.getLogger(AboutDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setResizable(false);
        setUndecorated(true);

        closeButton.setBorder(null);
        closeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(closeButton, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
       this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AboutDialog dialog = new AboutDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    // End of variables declaration//GEN-END:variables

}
