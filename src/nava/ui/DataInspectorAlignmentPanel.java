/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package nava.ui;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import nava.data.types.Alignment;
import nava.utils.AlignmentType;

/**
 *
 * @author Michael Golden <michaelgolden0@gmail.com>
 */
public class DataInspectorAlignmentPanel extends javax.swing.JPanel implements ItemListener {

    ProjectController projectController;
    Alignment alignment;

    /**
     * Creates new form DataInspectorAlignmentPanel
     */
    public DataInspectorAlignmentPanel(ProjectController projectController, Alignment alignment) {
        initComponents();
        this.projectController = projectController;
        this.alignment = alignment;
        switch (alignment.alignmentType) {
            case NUCLEOTIDE_ALIGNMENT:
                this.nucleotideRadioButton.setSelected(true);
                break;
            case CODON_ALIGNMENT:
                this.codonRadioButton.setSelected(true);
                break;
            case PROTEIN_ALIGNMENT:
                this.proteinRadioButton.setSelected(true);
                break;
        }        
        this.isAlignedCheckBox.setSelected(alignment.aligned);
        this.isAlignedCheckBox.addItemListener(this);
        this.nucleotideRadioButton.addItemListener(this);
        this.codonRadioButton.addItemListener(this);
        this.proteinRadioButton.addItemListener(this);
        this.setNumberOfSequences(alignment.numSequences);
        this.setNumberOfColumns(alignment.length);
    }
    
    public void setNumberOfSequences(int numSequences)
    {
        this.numSequencesLabel.setText("No. sequences: "+numSequences);
    }
    
    public void setNumberOfColumns (int numColumns)
    {
        this.numColumnsLabel.setText("No. columns: "+numColumns);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        alignmentTypeGroup = new javax.swing.ButtonGroup();
        nucleotideRadioButton = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        codonRadioButton = new javax.swing.JRadioButton();
        proteinRadioButton = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        isAlignedCheckBox = new javax.swing.JCheckBox();
        numSequencesLabel = new javax.swing.JLabel();
        numColumnsLabel = new javax.swing.JLabel();

        alignmentTypeGroup.add(nucleotideRadioButton);
        nucleotideRadioButton.setSelected(true);
        nucleotideRadioButton.setText("Nucleotide");

        jLabel1.setText("Alignment type");

        alignmentTypeGroup.add(codonRadioButton);
        codonRadioButton.setText("Codon");

        alignmentTypeGroup.add(proteinRadioButton);
        proteinRadioButton.setText("Protein");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/nucleotide-alignment-16x16.png"))); // NOI18N
        jLabel2.setText(" ");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/coding-alignment-16x16.png"))); // NOI18N
        jLabel3.setText(" ");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/protein-alignment-16x16.png"))); // NOI18N
        jLabel4.setText(" ");

        isAlignedCheckBox.setText("Sequences aligned?");

        numSequencesLabel.setText("No. sequences: 100");

        numColumnsLabel.setText("No. columns: 1000");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(isAlignedCheckBox)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nucleotideRadioButton)
                            .addComponent(codonRadioButton)
                            .addComponent(proteinRadioButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)))
                    .addComponent(numSequencesLabel)
                    .addComponent(numColumnsLabel))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nucleotideRadioButton)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codonRadioButton)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(proteinRadioButton)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numSequencesLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numColumnsLabel)
                .addGap(7, 7, 7)
                .addComponent(isAlignedCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup alignmentTypeGroup;
    private javax.swing.JRadioButton codonRadioButton;
    private javax.swing.JCheckBox isAlignedCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton nucleotideRadioButton;
    private javax.swing.JLabel numColumnsLabel;
    private javax.swing.JLabel numSequencesLabel;
    private javax.swing.JRadioButton proteinRadioButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void itemStateChanged(ItemEvent e) {
        if (e.getSource().equals(nucleotideRadioButton)) {
            this.alignment.alignmentType = AlignmentType.NUCLEOTIDE_ALIGNMENT;
        } else if (e.getSource().equals(codonRadioButton)) {
            this.alignment.alignmentType = AlignmentType.CODON_ALIGNMENT;
        }
        if (e.getSource().equals(proteinRadioButton)) {
            this.alignment.alignmentType = AlignmentType.PROTEIN_ALIGNMENT;
        }
        if(e.getSource().equals(isAlignedCheckBox))
        {
            this.alignment.aligned = isAlignedCheckBox.isSelected();
        }
        int index = projectController.projectModel.dataSources.indexOf(alignment);
        projectController.projectModel.dataSources.set(index, alignment);
    }
}
