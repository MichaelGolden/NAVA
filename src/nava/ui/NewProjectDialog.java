/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package nava.ui;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.border.EmptyBorder;
import nava.utils.Utils;

/**
 *
 * @author Michael Golden <michaelgolden0@gmail.com>
 */
public class NewProjectDialog extends javax.swing.JDialog implements KeyListener {

     public static JFileChooser browseDialog = new JFileChooser();
    
    /**
     * Creates new form CreateNewProject
     */
    public NewProjectDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        this.workspaceDirectoryField.setText(MainFrame.workspaceDirectory.getAbsolutePath() + File.separator);
        projectNameField.addKeyListener(this);
        update(true);
        this.errorLabel.setBorder(new EmptyBorder(0,3,0,0));
    }

    File projectFile = null;
    boolean createNewProject = true;
    public void update(boolean increment) {
        File workspaceLocationFile = new File(workspaceDirectoryField.getText() + File.separator);
        File projectLocationFile = new File(workspaceDirectoryField.getText() + File.separator + projectNameField.getText());
        if (projectLocationFile.exists() && increment) {
            String projectName = projectNameField.getText();
            for (int i = 2; projectLocationFile.exists(); i++) {
                projectLocationFile = new File(workspaceDirectoryField.getText() + File.separator + projectName + i);
                projectNameField.setText(projectName+i);
            }
        }
        this.projectLocationField.setText(projectLocationFile.getAbsolutePath());

        if (!Utils.isFilenameValid(projectLocationFile) || !projectLocationFile.getParentFile().equals(workspaceLocationFile) || projectLocationFile.exists() || projectNameField.getText().contains(".")) {
            if (projectNameField.getText().trim().equals("")) {
                errorLabel.setText("'Project name' is empty or consists of white spaces.");
            } else if (!Utils.isFilenameValid(projectLocationFile) || !projectLocationFile.getParentFile().equals(workspaceLocationFile) || projectNameField.getText().contains(".")) {
                errorLabel.setText("Not a valid directory name. Contains illegal symbols.");
            } else if (projectLocationFile.exists()) {
                errorLabel.setText("A project with this name already exists in this location.");
            }
            errorLabel.setForeground(Color.red);
            this.projectNameField.setBackground(new Color(255, 140, 140));
            createProjectButton.setEnabled(false);
            projectFile = null;
        } else {
            this.projectNameField.setBackground(Color.white);
            createProjectButton.setEnabled(true);
            errorLabel.setForeground(Color.black);
            errorLabel.setText("Enter a project name and click 'Create project'.");
            projectFile = projectLocationFile;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        workspaceDirectoryField = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        projectNameField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        projectLocationField = new javax.swing.JTextField();
        createProjectButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Create a new NAVA project");
        setResizable(false);

        jLabel1.setText("Workspace directory");

        workspaceDirectoryField.setEditable(false);
        workspaceDirectoryField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        workspaceDirectoryField.setText("jTextField1");

        browseButton.setText("Browse");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Project name");

        projectNameField.setText("UntitledProject");

        jLabel3.setText("Project location");

        projectLocationField.setEditable(false);
        projectLocationField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        projectLocationField.setText("jTextField3");

        createProjectButton.setText("Create project");
        createProjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createProjectButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorLabel.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(createProjectButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(workspaceDirectoryField)
                                    .addComponent(projectLocationField)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(projectNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 127, Short.MAX_VALUE)))
                                .addGap(12, 12, 12)
                                .addComponent(browseButton))
                            .addComponent(errorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(projectNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(workspaceDirectoryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseButton)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(projectLocationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createProjectButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
       projectFile = null;
       dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void createProjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createProjectButtonActionPerformed
        if(projectFile != null)
        {
            createNewProject = true;
        }
        dispose();
    }//GEN-LAST:event_createProjectButtonActionPerformed

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        browseDialog.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        browseDialog.showOpenDialog(this);
        if(browseDialog.getSelectedFile() != null)
        {
            this.workspaceDirectoryField.setText(browseDialog.getSelectedFile().getAbsolutePath()+File.separator);
        }
        update(true);
    }//GEN-LAST:event_browseButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewProjectDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewProjectDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewProjectDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewProjectDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                NewProjectDialog dialog = new NewProjectDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton createProjectButton;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField projectLocationField;
    private javax.swing.JTextField projectNameField;
    private javax.swing.JTextField workspaceDirectoryField;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
        update(false);
    }

    @Override
    public void keyPressed(KeyEvent e) {
        update(false);
    }

    @Override
    public void keyReleased(KeyEvent e) {
        update(false);
    }
}
